using System;

namespace Eiler_project
{
    class Program
    {
        static void Main(string[] args)
        {
            Task12();
        }

        static void Task1()
        {
            //Если выписать все натуральные числа меньше 10, кратные 3 или 5, то получим 3, 5, 6 и 9.Сумма этих чисел равна 23.
            //Найдите сумму всех чисел меньше 1000, кратных 3 или 5.

            const int MAX = 1000;
            int sum = 0;

            for (int i = 1; i < MAX; i++)
            {
                if ((i % 3 == 0) || (i % 5 == 0))
                    sum += i;
            }
            Console.WriteLine(sum);
        }
        static void Task2()
        {
            //Каждый следующий элемент ряда Фибоначчи получается при сложении двух предыдущих. Начиная с 1 и 2, первые 10 элементов будут:
            //1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
            //Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают четыре миллиона.

            const int MAX = 4000000;
            long sum = 0;

            for (int i = 1, a = 1, b = 2; i < MAX; i++)
            {
                if (b % 2 == 0)
                    sum += b;
                int temp = a;
                a = b;
                b += temp;
            }
            Console.WriteLine(sum);
        }
        static void Task3()
        {
            //Простые делители числа 13195 - это 5, 7, 13 и 29.
            //Каков самый большой делитель числа 600851475143, являющийся простым числом ?

            const long MAX = 600851475143;
            long del = 0;

            for (long i = 2; i < MAX/2; i++)
            {
                if (MAX % i == 0)
                {
                    del = MAX / i;
                    for (int j = 3; j < del; j++)
                        if (del % j == 0) { del = 0; break; }
                }
                if (del != 0) break;
            }
            Console.WriteLine(del);
        }
        static void Task4()
        {
            //Число - палиндром с обеих сторон(справа налево и слева направо) читается одинаково.
            //Самое большое число - палиндром, полученное умножением двух двузначных чисел – 9009 = 91 × 99.
            //Найдите самый большой палиндром, полученный умножением двух трехзначных чисел.
            int num;
            int result = 0;
            for (int i = 999; i > 99; i--)
            {
                for (int j = 999; j > 99; j--)
                {
                    num = i * j;
                    for (int k = 0, l = num.ToString().Length - 1; k < num.ToString().Length; k++, l--)
                    {
                        if (!(num.ToString()[k] == num.ToString()[l])) { num = 0; break; }
                        else if (k >= l) break;
                        else continue;
                    }
                    if (num != 0)
                    {
                        if (num > result) result = num;
                        break;
                    }
                }
            }
            Console.WriteLine(result);
        }
        static void Task6()
        {
            //Сумма квадратов первых десяти натуральных чисел равна
            //1^2 + 2^2 + ... +10^2 = 385
            //Квадрат суммы первых десяти натуральных чисел равен
            //(1 + 2 + ... +10)^2 = 552 = 3025
            //Следовательно, разность между суммой квадратов и квадратом суммы первых десяти натуральных чисел составляет 3025 − 385 = 2640.
            //Найдите разность между суммой квадратов и квадратом суммы первых ста натуральных чисел.

            int sumSq = 0;
            int Sqsum = 0;
            for(int i = 1; i <=100; i++)
            {
                sumSq += i * i;
                Sqsum += i;
            }
            Console.WriteLine(Sqsum*Sqsum-sumSq);
        }
        static void Task8()
        {
            //Наибольшее произведение четырех последовательных цифр в нижеприведенном 1000 - значном числе равно 9 × 9 × 8 × 9 = 5832.
            //7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843
            //85861560789112949495459501737958331952853208805511 12540698747158523863050715693290963295227443043557
            //6689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749
            //3035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776
            //6572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397
            //5369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474
            //8216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586
            //1786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408
            //0719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606
            //0588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
            //Найдите наибольшее произведение тринадцати последовательных цифр в данном числе.

            string num = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
            long result = 0;
            long temp = 1;
            for(int i = 0; i < 1000-13; i++)
            {
                for (int j = i; j < i+13; j++)
                {
                    if (num[j] == '0')
                    {
                        i += j-i;
                        break;
                    }
                    temp *= int.Parse(num[j].ToString());
                }
                if (temp > result)
                    result = temp;
                temp = 1;
            }
            Console.WriteLine(result);
        }
        static void Task9()
        {
            //Тройка Пифагора -три натуральных числа a < b < c, для которых выполняется равенство
            //a^2 + b^2 = c^2
            //Например, 3^2 + 4^2 = 9 + 16 = 25 = 5^2.
            //Существует только одна тройка Пифагора, для которой a + b + c = 1000.
            //Найдите произведение abc.
            int result = 1;

            for (int a = 1; a < 999; a++)
            {
                for (int b = 1; a + b < 1000; b++)
                {
                    for (int c = (int)Math.Sqrt(a*a + b*b); a + b + c <= 1000; c++)
                    {
                        if (a * a + b * b < c * c) break;
                        if ((a * a + b * b == c * c) && (a + b + c == 1000))
                        {
                            result = (a * b * c);
                            break;
                        }
                    }
                    if (result != 1) break;
                }
                if (result != 1) break;
            }
            Console.WriteLine(result);
        }
        static void Task11()
        {
            //В таблице 20×20(внизу) четыре числа на одной диагонали выделены красным.
            //08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08
            //49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00
            //81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65
            //52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91
            //22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80
            //24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50
            //32 98 81 28 64 23 67 10 26* 38 40 67 59 54 70 66 18 38 64 70
            //67 26 20 68 02 62 12 20 95 63* 94 39 63 08 40 91 66 49 94 21
            //24 55 58 05 66 73 99 26 97 17 78* 78 96 83 14 88 34 89 63 72
            //21 36 23 09 75 00 76 44 20 45 35 14* 00 61 33 97 34 31 33 95
            //78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92
            //16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57
            //86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58
            //19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40
            //04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66
            //88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69
            //04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36
            //20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16
            //20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54
            //01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48
            //Произведение этих чисел 26 × 63 × 78 × 14 = 1788696.
            //Каково наибольшее произведение четырех подряд идущих чисел в таблице 20×20, расположенных в любом направлении(вверх, вниз, вправо, влево или по диагонали)?

            int[,] array = 
                {
                    {08, 02, 22, 97, 38, 15, 00, 40, 00, 75, 04, 05, 07, 78, 52, 12, 50, 77, 91, 08 },
                    {49, 49, 99, 40, 17, 81, 18, 57, 60, 87, 17, 40, 98, 43, 69, 48, 04, 56, 62, 00 },
                    {81, 49, 31, 73, 55, 79, 14, 29, 93, 71, 40, 67, 53, 88, 30, 03, 49, 13, 36, 65 },
                    {52, 70, 95, 23, 04, 60, 11, 42, 69, 24, 68, 56, 01, 32, 56, 71, 37, 02, 36, 91},
                    {22, 31, 16, 71, 51, 67, 63, 89, 41, 92, 36, 54, 22, 40, 40, 28, 66, 33, 13, 80},
                    {24, 47, 32, 60, 99, 03, 45, 02, 44, 75, 33, 53, 78, 36, 84, 20, 35, 17, 12, 50},
                    {32, 98, 81, 28, 64, 23, 67, 10, 26, 38, 40, 67, 59, 54, 70, 66, 18, 38, 64, 70},
                    {67, 26, 20, 68, 02, 62, 12, 20, 95, 63, 94, 39, 63, 08, 40, 91, 66, 49, 94, 21},
                    {24, 55, 58, 05, 66, 73, 99, 26, 97, 17, 78, 78, 96, 83, 14, 88, 34, 89, 63, 72},
                    {21, 36, 23, 09, 75, 00, 76, 44, 20, 45, 35, 14, 00, 61, 33, 97, 34, 31, 33, 95},
                    {78, 17, 53, 28, 22, 75, 31, 67, 15, 94, 03, 80, 04, 62, 16, 14, 09, 53, 56, 92},
                    {16, 39, 05, 42, 96, 35, 31, 47, 55, 58, 88, 24, 00, 17, 54, 24, 36, 29, 85, 57},
                    {86, 56, 00, 48, 35, 71, 89, 07, 05, 44, 44, 37, 44, 60, 21, 58, 51, 54, 17, 58},
                    {19, 80, 81, 68, 05, 94, 47, 69, 28, 73, 92, 13, 86, 52, 17, 77, 04, 89, 55, 40},
                    {04, 52, 08, 83, 97, 35, 99, 16, 07, 97, 57, 32, 16, 26, 26, 79, 33, 27, 98, 66},
                    {88, 36, 68, 87, 57, 62, 20, 72, 03, 46, 33, 67, 46, 55, 12, 32, 63, 93, 53, 69},
                    {04, 42, 16, 73, 38, 25, 39, 11, 24, 94, 72, 18, 08, 46, 29, 32, 40, 62, 76, 36},
                    {20, 69, 36, 41, 72, 30, 23, 88, 34, 62, 99, 69, 82, 67, 59, 85, 74, 04, 36, 16},
                    {20, 73, 35, 29, 78, 31, 90, 01, 74, 31, 49, 71, 48, 86, 81, 16, 23, 57, 05, 54},
                    { 01, 70, 54, 71, 83, 51, 54, 69, 16, 92, 33, 48, 61, 43, 52, 01, 89, 19, 67, 48} 
                };
            int max = 1;
            int temp=1;
            for (int i = 0; i < 20; i++)
            {
                if (i + 3 >= 20) continue;
                for (int j = 0; j < 20; j++)
                {
                    if (j + 3 >= 20) continue;
                    temp = array[i, j] * array[i+1, j] * array[i+2, j] * array[i+3, j];
                    if (temp > max) max = temp;

                    temp = array[i, j] * array[i, j+1] * array[i, j+2] * array[i, j+3];
                    if (temp > max) max = temp;

                    temp = array[i, j] * array[i + 1, j+1] * array[i + 2, j+2] * array[i + 3, j+3];
                    if (temp > max) max = temp;
                }
            }
            Console.WriteLine(max);
        }

        static void Task12()
        {
            //Последовательность треугольных чисел образуется путем сложения натуральных чисел. К примеру, 7-е треугольное число равно 1+2+3+4+5+6+7=28.
            //Первые десять треугольных чисел:1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
            //Перечислим делители первых семи треугольных чисел:
            //1: 1
            //3: 1, 3
            //6: 1, 2, 3, 6
            //10: 1, 2, 5, 10
            //15: 1, 3, 5, 15
            //21: 1, 3, 7, 21
            //28: 1, 2, 4, 7, 14, 28
            //Как мы видим, 28 - первое треугольное число, у которого более пяти делителей.
            //Каково первое треугольное число, у которого более пятисот делителей?
            int num3=0;
            int count = 0;
            for (int i = 1; i < 14000; i++)
            {
                count = 1;
                num3 += i;
                for (int j = 1; j <= num3/2; j++)
                {
                    if (num3 % j == 0) count++;
                }
                Console.WriteLine(i + ":" + num3 + " " + count);
                if(count > 500)
                {
                    Console.WriteLine(count);
                    break;
                }
            }



        }

    }
}
